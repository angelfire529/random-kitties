{"version":3,"sources":["service/cat-service.js","cat-card/cat-img-form.js","cat-card/cat-card.js","slide-out/slide-out.js","App.js","serviceWorker.js","index.js"],"names":["request","require","CatService","Promise","resolve","reject","get","err","resp","body","src","JSON","parse","file","category","found","localStorage","getItem","find","cat","toLowerCase","images","newCategory","pic","categories","newCat","index","i","length","push","setItem","stringify","e","this","_INSTANCE","getInstance","CatImgForm","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","handleChange","handleKeyPress","refresh","state","value","preventDefault","addCat","imageSrc","setState","evt","target","which","refreshCat","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","onKeyPress","required","onClick","Component","CatCategory","name","getCats","show","total","CatCard","imgSrc","catService","addCategory","getCategories","printCategories","Exists","hide","AddCategory","console","log","_this2","cats","map","c","key","cat_card_CatCategory","setCat","_this3","GetRandomCat","then","response","alt","cat_img_form_CatImgForm","Thumbnail","href","width","height","SlideOutPanel","GetImagesByCategory","thumb","slide_out_Thumbnail","SlideOut","hideSlideOut","getCategory","setShow","thumbnails","react_transition_group","in","enter","exit","appear","timeout","classNames","slide_out_SlideOutPanel","cat_card_CatCard","App","slide_out_SlideOut","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b938da45.chunk.js","sourcesContent":["\r\nlet request = require('request')\r\nclass CatService {\r\n static  _INSTANCE = null;\r\n\r\n static getInstance() {\r\n    return !this._INSTANCE ? this._INSTANCE = new CatService() : this._INSTANCE;\r\n }\r\n \r\n    GetRandomCat() {\r\n        let promise = new Promise(function(resolve, reject) {\r\n            request.get('http://aws.random.cat/meow', function (err, resp, body) {\r\n                if (!err) {\r\n                    const src = JSON.parse(body);\r\n                    resolve(src.file);\r\n                }\r\n                else {\r\n                    reject(err);\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    GetImagesByCategory(category) {\r\n        let cats = JSON.parse(localStorage.getItem('categories'));\r\n        const found = cats.find(cat => {\r\n            return cat.category.toLowerCase() === category.toLowerCase();\r\n        });\r\n\r\n        if (found) {\r\n            return found.images;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    AddCategory(newCategory, pic) {\r\n        let categories = JSON.parse(localStorage.getItem('categories'));\r\n        const newCat = { category: newCategory, images: [pic]};\r\n        if (!categories) {\r\n            categories = [newCat]\r\n        }\r\n        else {\r\n         let index = -1;\r\n         for(let i = 0; i < categories.length; i++) {\r\n             if (categories[i].category.toLowerCase() === newCategory.toLowerCase()) {\r\n                index = i;\r\n                break;\r\n             }\r\n         }\r\n         if  (index !== -1) {\r\n             categories[index].images.push(pic);\r\n         }\r\n          else {\r\n              categories.push(newCat);\r\n          }\r\n        }\r\n\r\n        localStorage.setItem('categories', JSON.stringify(categories));\r\n    }\r\n\r\n    Exists(category) {\r\n        let existing = JSON.parse(localStorage.getItem('categories'))\r\n        const found = existing.find(e => { return e.category.toLowerCase() === category.toLowerCase()});\r\n        return  found ? true : false;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CatService.getInstance();","import React, { Component } from 'react'\r\n\r\nexport default class CatImgForm  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            value: ''\r\n        };\r\n        \r\n        this.refresh = this.refresh.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n       this.props.addCat(this.state.value, this.props.imageSrc);\r\n       this.setState({value: ''})\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ value: evt.target.value });\r\n    }\r\n    handleKeyPress(evt) {\r\n        if (evt.which === 13) {\r\n            this.handleSubmit(evt);\r\n        }\r\n    }\r\n\r\n    refresh () {\r\n        this.props.refreshCat();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form className=\"form-inline\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group col-xs-12 col-xl-7\">\r\n                       <div className=\"category--input\">\r\n                        <label className=\"category--label\">Category</label>\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"enter cagetory\" value={this.state.value} onChange={this.handleChange} onKeyPress={this.handleKeyPress} required/>\r\n                       </div>\r\n                        </div>\r\n                    <div className=\"form-group col-xs-12 col-xl-5\">\r\n                        <div className=\"btn-container \">\r\n                                <button type=\"submit\" className=\"btn btn-sm btn-outline-primary\">Submit</button>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary btn-next\" onClick={this.refresh}>Next</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CatService from '../service/cat-service';\r\nimport CatImgForm from './cat-img-form';\r\nimport './cat-card.scss';\r\n\r\nconst CatCategory = props =>  {\r\n    \r\n    const handleClick = (cat) => {\r\n        props.getCats(cat);\r\n        props.show();\r\n    }\r\n  \r\n   return (\r\n       <div className=\"category-container col-12  d-inline-flex\">\r\n       <div className=\"col-8\">\r\n       <button type=\"button\" className=\"btn btn-link\" onClick={() => handleClick(props.name) }>{props.name}</button>\r\n       </div> \r\n       <div className=\"col-4\">\r\n       <span className=\"badge badge-primary badge-pill\">{props.total}</span>\r\n       </div>\r\n       </div>\r\n   );\r\n}\r\n\r\nexport default class CatCard extends Component {\r\n    catService;\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state =  {\r\n            imgSrc: null,\r\n        };\r\n        this.catService = CatService;\r\n        this.refreshCat = this.refreshCat.bind(this);\r\n        this.addCategory = this.addCategory.bind(this);\r\n        this.getCategories = this.getCategories.bind(this);\r\n        this.printCategories = this.printCategories.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshCat();\r\n    }\r\n\r\n    addCategory (newCategory, pic) {\r\n        const exist = this.catService.Exists(newCategory)\r\n        if (exist) {\r\n            this.props.show();\r\n        } \r\n        else {\r\n            this.props.hide();\r\n        }\r\n       this.catService.AddCategory(newCategory, pic);\r\n    }\r\n\r\n    getCategories() {\r\n        console.log(localStorage.getItem('categories'));\r\n        return JSON.parse(localStorage.getItem('categories'));\r\n    }\r\n\r\n    printCategories() {\r\n        const cats = this.getCategories();\r\n        if (!cats || (cats && cats.length === 0)) {\r\n            return '';\r\n        }\r\n        return cats.map((c, i) => {\r\n            return <li  key={i+3}><CatCategory key={i} name={c.category} show={this.props.show} getCats={this.props.setCat} total={c.images.length}  /></li>\r\n        });\r\n    }\r\n\r\n    refreshCat() {\r\n        this.catService.GetRandomCat().then(response => {\r\n            this.setState({imgSrc: response})\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"card\">\r\n            <img src={this.state.imgSrc} className=\"card-img-top img-cat\" alt=\"cat\" ></img>\r\n                <div className=\"card-body\">\r\n                    <CatImgForm imageSrc={this.state.imgSrc}  refreshCat={this.refreshCat} addCat={this.addCategory}/>\r\n                    <div className=\"cats\">\r\n                        <ul>\r\n                           {this.printCategories()}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport CatCard from '../cat-card/cat-card';\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport CatService from '../service/cat-service';\r\nimport './slide-out.scss';\r\n\r\nconst Thumbnail = props => {\r\n    return (\r\n        <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 ml-2 mt-3 mr-2\">\r\n        <a target=\"_blank\" className=\"margin-right--10\" href={props.src}><img src={props.src} width=\"150px\" height=\"125px\" alt=\"i\" /></a>\r\n        </div>\r\n        \r\n        );\r\n}\r\n\r\nconst  SlideOutPanel = props =>  {\r\n   \r\n    const hideSlideOut = () => {\r\n        props.hide();\r\n    }\r\n\r\n    const printThumbnails  = (category) =>{\r\n        const thumbnails = category ? CatService.GetImagesByCategory(category) : [];\r\n       return  thumbnails.map((thumb, i) => {\r\n           return  <Thumbnail key={i} src={thumb} />\r\n        });\r\n    }\r\n\r\n        return (\r\n            <div className=\"slide-out\" >\r\n                <span className=\"close\" onClick={hideSlideOut}>x</span>\r\n                <div className=\"row\">\r\n                {printThumbnails(props.cat)}\r\n                </div>\r\n             </div>\r\n        );\r\n}\r\n\r\nexport default class SlideOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.state = {\r\n            show: false,\r\n            category: null\r\n        };\r\n        this.hideSlideOut = this.hideSlideOut.bind(this);\r\n        this.getCategory = this.getCategory.bind(this);\r\n        this.setShow = this.setShow.bind(this);\r\n    }\r\n\r\n    hideSlideOut () {\r\n        this.setState({show: false});\r\n    }\r\n\r\n    setShow() {\r\n        this.setState({show: true});\r\n    }\r\n\r\n    getCategory(cat) {\r\n        this.setState({category: cat});\r\n    }\r\n\r\n    render () {\r\n        let thumbnails =  null;\r\n        if (this.state.show) {\r\n            thumbnails =   <CSSTransition\r\n                                            in={this.state.show}\r\n                                            enter={this.state.show}\r\n                                            exit={!this.state.show}\r\n                                            appear={true}\r\n                                            timeout={15000}\r\n                                            classNames=\"slide\"\r\n                                            >\r\n            <SlideOutPanel className=\"\" hide={this.hideSlideOut} show={this.state.show} cat={this.state.category} />\r\n            </CSSTransition>\r\n        }\r\n        return (\r\n            <div className=\"slide-out-container\">\r\n                <div className=\"side-window\">\r\n                    <CatCard show={this.setShow} hide={this.hideSlideOut}  setCat={this.getCategory}/>\r\n                </div>\r\n            {thumbnails}               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport SlideOut from './slide-out/slide-out';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <SlideOut />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}